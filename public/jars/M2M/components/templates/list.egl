[% out.setContentType('Java'); %]
package [%= package %];

[% if (component.childActivity.isDefined()) { %]
	[%
		// generate new childActivity class
		var t : Template := TemplateFactory.load(compPath+'listChild.egl');
		t.populate('name', component.childActivity);
		t.populate('package', package);
		t.populate('basePath', basePath);
		t.populate('compPath', compPath);
		t.populate('codePath', codePath);
		t.process();
		t.generate(codePath+'src/' + path + component.childActivity + '.java');
	%]

	[%
		for (p in Presentation.all) {
			if (component.childActivity == p.activityname) {
				t := TemplateFactory.load(basePath+'genLayout.egl');
				t.populate('layout', p.layout);
				t.populate('basePath',    basePath);
				t.populate('compPath',    compPath);
				t.process();
				t.generate(codePath+'res/layout/' + p.layout.name + '.xml');
			}
		}
	%]
[% } %]

import java.util.ArrayList;
import java.util.HashMap;

import android.app.Activity;
import android.content.Intent;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import be.pds.thesis.AndroidComponent;
import be.pds.thesis.GenericActivity;
import be.pds.thesis.ServerConnection;

public class ListComponent extends AndroidComponent {

	private final String TAG = getClass().getName();
	private HashMap<String, Object> properties;
	private ArrayList<String> content;
	private Button addNoteButton;
	private EditText noteInput;
	private ListView noteOutput;

	public ListComponent(Activity a) {
		super(a);

		properties = new HashMap<String, Object>();
		properties.put("type", ((GenericActivity)parent).getClassName());
		properties.put("parent", "null");
		content = new ArrayList<String>();
		
		addNoteButton = (Button) parent.findViewById(R.id.addNoteItemButton);
		noteInput = (EditText) parent.findViewById(R.id.noteItemInput);
		noteOutput = (ListView) parent.findViewById(R.id.noteContent);
		noteOutput.setOnItemClickListener(new AdapterView.OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> a, View v, int pos, long id) {
				String item = (String) noteOutput.getItemAtPosition(pos);
				String parent_mod = item.substring(0, item.length()-1);
				Log.i(TAG, "PARENT = " + parent_mod);
				Log.i(TAG, "Item " + parent_mod + " was clicked.");
				Intent i = new Intent(parent.getApplicationContext(), [%= component.childActivity %].class);
				i.putExtra("parent", parent_mod);
				i.putExtra("type", ((GenericActivity)parent).getClassName());
				
				parent.startActivityForResult(i, 0);
			}
			
		});
		
		ServerConnection.getInstance().getGenericNotes(properties);
		
		addNoteButton.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				properties.put("parent", "null");
				action(properties);
			}
		});
	}
	
	@Override
	public void action(HashMap<String, Object> properties) {
		properties.put("text", noteInput.getText().toString());
		ServerConnection.getInstance().addGenericNote(properties);
	}

	public void onMessage(final String message) {
		parent.runOnUiThread(new Runnable() {
			public void run() {
				content.add(message);
				String[] values = (String[])content.toArray(new String[content.size()]);
				ArrayAdapter<String> adapter = new ArrayAdapter<String>(parent.getApplicationContext(),
						android.R.layout.simple_list_item_1, values);
				noteOutput.setAdapter(adapter);
			}
		});
	}
}
