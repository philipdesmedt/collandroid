[% out.setContentType('Java'); %]
package [%= package %];

[%
	// generate new childActivity class
	var l : Template := TemplateFactory.load(compPath+'preparerequesttoken.egl');
	l.populate('package', package);
	l.populate('refActivity', name);
	l.populate('basePath', basePath);
	l.populate('compPath', compPath);
	l.populate('codePath', codePath);
	l.process();
	l.generate(codePath+'src/' + path + 'PrepareRequestTokenActivity.java');
%]

import java.util.HashMap;

import android.app.Activity;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Handler;
import android.preference.PreferenceManager;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;
import be.pds.thesis.AndroidComponent;

public class TwitterComponent extends AndroidComponent {

	private SharedPreferences prefs;
	private final Handler mTwitterHandler = new Handler();
	private HashMap<String, Object> properties;
	[% if (component.inputField.isDefined() and component.inputField.size() > 0) { %]
		private [%= component.inputField.type %] [%= component.inputField %];
	[% } %]
	[% if (component.sendButton.isDefined() and component.sendButton.size() > 0) { %]
		private [%= component.sendButton.type %] [%= component.sendButton %];
	[% } %]

	[% if (component.layoutcomponents.isDefined() and component.layoutcomponents.size() > 0) { %]
	[% for (c in component.layoutcomponents) { %]
	private [%= c.type %] [%= c %];
	[% } %]
	[% } %]

	public TwitterComponent(Activity a) {
		super(a);
		setupTwitter();
	}

	private void setupTwitter() { 
		[% if (component.layoutcomponents.isDefined() and component.layoutcomponents.size() > 0) { %]
		[% for (c in component.layoutcomponents) { %]
	    [%= c %] = ([%= c.type %]) findViewById(R.id.[%= c.layoutID %]);
	    [% } %]
	    [% } %]
	    [% if (component.inputField.isDefined() and component.inputField.size() > 0) { %]
			[%= component.inputField %] = ([%= component.inputField.type %]) this.parent.findViewById(R.id.[%= component.inputField.layoutID %]);
		[% } %]
		[% if (component.sendButton.isDefined() and component.sendButton.size() > 0) { %]
			[%= component.sendButton %] = ([%= component.sendButton.type %]) this.parent.findViewById(R.id.[%= component.sendButton.layoutID %]);
			[%= component.sendButton %].setOnClickListener(new View.OnClickListener() {
				@Override
				public void onClick(View v) {
					action(properties);
				}
			});
		[% } %]

	    this.prefs = PreferenceManager.getDefaultSharedPreferences(this.parent);
	    properties = new HashMap<String, Object>();
	    [% if (component.text.isDefined() and component.text.size() > 0) { %]
	    	properties.put("tweet", "[%= component.text %]");
	    [% } %]
	}

	final Runnable mUpdateTwitterNotification = new Runnable() {
		public void run() {
			Toast.makeText(parent.getBaseContext(), "Tweet sent !", Toast.LENGTH_LONG).show();
		}
	};

	@Override
	public void action(HashMap<String, Object> properties) {
		authAndTweet();
	}
		
	private void authAndTweet() {
		if (TwitterUtils.isAuthenticated(prefs)) {
			sendTweet();
		} else {
			Intent i = new Intent(this.parent.getApplicationContext(), PrepareRequestTokenActivity.class);
			this.parent.startActivity(i);
		}
	}

	private void sendTweet() {
		String tweet = "";
		if (properties.get("tweet") != null) {
			tweet = (String)properties.get("tweet");
		}
		[% if (component.inputField.isDefined() and component.inputField.size() > 0) { %]
			tweet = [%= component.inputField %].getText().toString();
		[% } %]
		sendTweet(tweet);
	}

	@Override
	public void onMessage(String message) { }

	private void sendTweet(final String tweet) {
		Thread t = new Thread() {
			public void run() {
				try {
					TwitterUtils.sendTweet(prefs, tweet);
					mTwitterHandler.post(mUpdateTwitterNotification);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		};
		t.start();
	}

}
